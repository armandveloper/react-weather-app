{"version":3,"sources":["constants/temp-units.ts","helpers/geolocation.ts","context/WeatherContext.tsx","styles/GlobalStyle.tsx","helpers/date.ts","helpers/temp-units.ts","components/ForecastCard.tsx","components/Forecast.tsx","animations/index.ts","components/Loader.tsx","constants/cardinal-directions.ts","components/TodayHightlights.tsx","components/ButtonCircle.tsx","components/UnitSwitch.tsx","components/MainWeather.tsx","components/Button.tsx","components/SidebarTop.tsx","assets/img/clouds-bg.png","components/SidebarWeatherResult.tsx","components/LocationList.tsx","components/WeatherForm.tsx","components/SearchWeather.tsx","components/Sidebar.tsx","components/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TempUnits","getCurrentPosition","Promise","resolve","reject","window","navigator","geolocation","coords","lat","latitude","lng","longitude","error","WeatherContext","createContext","WeatherProvider","children","useState","isSearching","setIsSearching","hideSearchWeather","baseURL","isLoading","setLoading","weather","setWeather","getWeather","useCallback","woeid","a","fetch","resp","json","data","console","log","locationResult","setLocationResult","searchLocation","q","encodeURI","length","Error","name","searchLocationByCoords","C","tempUnit","setTempUnit","useEffect","permissions","query","state","handleGeolocationPermission","Provider","value","showSearchWeather","changeToCelsius","changeToFahrenheit","F","createGlobalStyle","days","months","formatDate","timestamp","date","Date","dayWeek","getDay","dayMonth","getDate","month","getMonth","celsiusToFahrehheit","temp","ForecastCardStyled","styled","li","ForecastCard","index","useContext","className","applicable_date","src","weather_state_abbr","alt","weather_state_name","max_temp","min_temp","ForecastStyled","ul","Forecast","forecast","consolidated_weather","slice","map","i","id","slideUp","keyframes","slideDown","spin","LoaderStyled","div","size","Loader","role","aria-label","cardinalDirections","Map","TodayHightlightsStyled","section","TodayHightlights","weatherToday","deg","get","wind_direction_compass","wind_speed","style","transform","humidity","width","visibility","air_pressure","ButtonCircleStyled","button","attrs","props","title","variant","ButtonCircle","text","icon","onClick","UnitSwitchStyled","header","UnitSwitch","MainWeatherStyled","main","MainWeather","ButtonStyled","shadow","Button","disabled","loading","SidebarTopStyled","nav","SidebarTop","then","SidebarWeatherResultStyled","cloudsBg","SidebarWeatherResult","the_temp","time","LocationListStyled","LocationList","item","WeatherFormStyled","form","WeatherForm","setSearchError","location","setLocation","prevLocation","setPrevLocation","onSubmit","e","preventDefault","catch","err","finally","type","placeholder","autoFocus","onChange","target","SearchWeatherStyled","show","SearchWeather","shouldRender","setRender","isSearchError","onAnimationEnd","SidebarStyled","aside","Sidebar","LayoutStyled","Layout","App","GlobalStyle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81aa6507.chunk.js","sourcesContent":["export enum TempUnits {\n\tC,\n\tF,\n}\n","export const getCurrentPosition = () => {\n\treturn new Promise<{ lat: number; lng: number }>((resolve, reject) => {\n\t\twindow.navigator.geolocation.getCurrentPosition(\n\t\t\t({ coords }: GeolocationPosition) => {\n\t\t\t\tconst lat = coords.latitude,\n\t\t\t\t\tlng = coords.longitude;\n\t\t\t\tresolve({ lat, lng });\n\t\t\t},\n\t\t\t(error: GeolocationPositionError) => {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t);\n\t});\n};\n","import {\n\tcreateContext,\n\tReactNode,\n\tuseCallback,\n\tuseEffect,\n\tuseState,\n} from 'react';\nimport { TempUnits } from '../constants/temp-units';\nimport { getCurrentPosition } from '../helpers/geolocation';\nimport { LocationSearch } from '../interfaces/location-search.interface';\nimport { WeatherResult } from '../interfaces/weather-result';\n\ninterface WeatherContextInt {\n\tshowSearchWeather(): void;\n\thideSearchWeather(): void;\n\tisSearching: boolean;\n\tlocationResult: LocationSearch[];\n\tweather: WeatherResult;\n\tisLoading: boolean;\n\ttempUnit: TempUnits;\n\tsearchLocation(q: string): Promise<void>;\n\tgetWeather(woeid: number): Promise<void>;\n\tchangeToCelsius(): void;\n\tchangeToFahrenheit(): void;\n\tsearchLocationByCoords(lat: number, lng: number): Promise<void>;\n}\n\nexport const WeatherContext = createContext<WeatherContextInt>(\n\t{} as WeatherContextInt\n);\n\nexport const WeatherProvider = ({ children }: { children: ReactNode }) => {\n\tconst [isSearching, setIsSearching] = useState(false);\n\n\tconst showSearchWeather = () => setIsSearching(true);\n\n\tconst hideSearchWeather = () => setIsSearching(false);\n\n\tconst baseURL =\n\t\t'https://api.allorigins.win/raw?url=https://www.metaweather.com/api';\n\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst [weather, setWeather] = useState<WeatherResult>(null!);\n\n\tconst getWeather = useCallback(async (woeid: number) => {\n\t\thideSearchWeather();\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tconst resp = await fetch(`${baseURL}/location/${woeid}`);\n\t\t\tconst data = await resp.json();\n\t\t\tsetWeather(data);\n\t\t} catch (err) {\n\t\t\tconsole.log('Error: ', err);\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t}, []);\n\n\tconst [locationResult, setLocationResult] = useState<LocationSearch[]>([]);\n\n\tconst searchLocation = async (q: string) => {\n\t\ttry {\n\t\t\tconst resp = await fetch(\n\t\t\t\t`${baseURL}/location/search/?query=${encodeURI(q)}`\n\t\t\t);\n\t\t\tconst data = await resp.json();\n\t\t\tif (data.length === 0) throw new Error('No results found');\n\t\t\tsetLocationResult(data);\n\t\t} catch (err) {\n\t\t\tconsole.log('Error: ', err);\n\t\t\tsetLocationResult([]);\n\t\t\tthrow err.name;\n\t\t}\n\t};\n\n\tconst searchLocationByCoords = useCallback(\n\t\tasync (lat: number, lng: number) => {\n\t\t\ttry {\n\t\t\t\tsetLoading(true);\n\t\t\t\tconst resp = await fetch(\n\t\t\t\t\t`${baseURL}/location/search/?lattlong=${lat},${lng}`\n\t\t\t\t);\n\t\t\t\tconst data: LocationSearch[] = await resp.json();\n\t\t\t\tif (data.length === 0) throw new Error('No results found');\n\t\t\t\tgetWeather(data[0].woeid);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('Error: ', err);\n\t\t\t}\n\t\t},\n\t\t[getWeather]\n\t);\n\n\tconst [tempUnit, setTempUnit] = useState(TempUnits.C);\n\n\tconst changeToCelsius = () => setTempUnit(TempUnits.C);\n\tconst changeToFahrenheit = () => setTempUnit(TempUnits.F);\n\n\tuseEffect(() => {\n\t\tconst handleGeolocationPermission = async () => {\n\t\t\tconst result = await navigator.permissions.query({\n\t\t\t\tname: 'geolocation',\n\t\t\t});\n\t\t\tif (result.state === 'granted') {\n\t\t\t\tconst { lat, lng } = await getCurrentPosition();\n\t\t\t\treturn searchLocationByCoords(lat, lng);\n\t\t\t}\n\t\t\tgetWeather(766273);\n\t\t};\n\t\thandleGeolocationPermission();\n\t}, [getWeather, searchLocationByCoords]);\n\n\treturn (\n\t\t<WeatherContext.Provider\n\t\t\tvalue={{\n\t\t\t\tisSearching,\n\t\t\t\tlocationResult,\n\t\t\t\tweather,\n\t\t\t\ttempUnit,\n\t\t\t\tisLoading,\n\t\t\t\tshowSearchWeather,\n\t\t\t\thideSearchWeather,\n\t\t\t\tsearchLocation,\n\t\t\t\tsearchLocationByCoords,\n\t\t\t\tgetWeather,\n\t\t\t\tchangeToCelsius,\n\t\t\t\tchangeToFahrenheit,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</WeatherContext.Provider>\n\t);\n};\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  :root {\n    --color-text: #E7E7EB;\n    --color-blue: #3C47E9;\n    --color-yellow: #FFEC65;\n    --color-gray: #616475;\n    --bg-sidebar: #1E213A;\n    --bg-body: #100E1D;\n  }\n  html {\n    box-sizing: border-box;\n    font-size: 62.5%;\n  }\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n  body {\n    font-family: 'Raleway', system-ui, sans-serif;\n    font-size: 1.6rem;\n    margin: 0;      \n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background-color: var(--bg-body);\n    color: var(--color-text);\n    scrollbar-color: var(--color-blue) var(--color-text);\n\t  scrollbar-width: thin;\n \n  }\n  @media (any-hover: hover) {\n    ::-webkit-scrollbar {\n    border-radius: 1rem;\n    width: 0.5rem;\n    height: 2rem;\n  }\n  ::-webkit-scrollbar-track {\n    background-color: var(--color-text);\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--color-blue);\n    border-radius: 1rem;\n  }\n  }\n  \n`;\n","const days: string[] = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nconst months: string[] = [\n\t'Jan',\n\t'Feb',\n\t'Mar',\n\t'Apr',\n\t'May',\n\t'Jun',\n\t'Jul',\n\t'Aug',\n\t'Sep',\n\t'Oct',\n\t'Nov',\n\t'Dec',\n];\n\nexport const formatDate = (timestamp: Date) => {\n\tconst date = new Date(timestamp);\n\tconst dayWeek = days[date.getDay()],\n\t\tdayMonth = date.getDate(),\n\t\tmonth = months[date.getMonth()];\n\treturn `${dayWeek}, ${dayMonth} ${month}`;\n};\n","export const celsiusToFahrehheit = (temp: number) => (temp * 9) / 5 + 32;\n","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { TempUnits } from '../constants/temp-units';\nimport { WeatherContext } from '../context/WeatherContext';\nimport { formatDate } from '../helpers/date';\nimport { celsiusToFahrehheit } from '../helpers/temp-units';\nimport { ConsolidatedWeather } from '../interfaces/weather-result';\n\ninterface ForecastCardProps {\n\tweather: ConsolidatedWeather;\n\tindex: number;\n}\n\nconst ForecastCardStyled = styled.li`\n\tbackground-color: var(--bg-sidebar);\n\tpadding: 2rem;\n\ttext-align: center;\n\t.day {\n\t\tfont-size: 1.6rem;\n\t\tfont-weight: 500;\n\t\tmargin: 0;\n\t}\n\t.img {\n\t\tdisplay: block;\n\t\tmargin: 1rem auto 4rem;\n\t\theight: 6.2rem;\n\t\twidth: 5.6rem;\n\t}\n\t.temperature-min-max {\n\t\tmax-width: 12rem;\n\t\tmargin: 0 auto;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t}\n\t.min {\n\t\tcolor: #a09fb1;\n\t}\n`;\n\nfunction ForecastCard({ weather, index }: ForecastCardProps) {\n\tconst { tempUnit } = useContext(WeatherContext);\n\n\treturn (\n\t\t<ForecastCardStyled>\n\t\t\t<h3 className=\"day\">\n\t\t\t\t{index === 0 ? 'Tomorrow' : formatDate(weather.applicable_date)}\n\t\t\t</h3>\n\t\t\t<img\n\t\t\t\tsrc={`https://www.metaweather.com/static/img/weather/${weather.weather_state_abbr}.svg`}\n\t\t\t\talt={weather.weather_state_name}\n\t\t\t\tclassName=\"img\"\n\t\t\t/>\n\t\t\t<p className=\"temperature-min-max\">\n\t\t\t\t<span className=\"max\">\n\t\t\t\t\t{tempUnit === TempUnits.F\n\t\t\t\t\t\t? ~~celsiusToFahrehheit(~~weather.max_temp)\n\t\t\t\t\t\t: ~~weather.max_temp}\n\t\t\t\t\t{tempUnit === TempUnits.F ? '°F' : '°C'}\n\t\t\t\t</span>\n\t\t\t\t<span className=\"min\">\n\t\t\t\t\t{tempUnit === TempUnits.F\n\t\t\t\t\t\t? ~~celsiusToFahrehheit(~~weather.min_temp)\n\t\t\t\t\t\t: ~~weather.min_temp}\n\t\t\t\t\t{tempUnit === TempUnits.F ? '°F' : '°C'}\n\t\t\t\t</span>\n\t\t\t</p>\n\t\t</ForecastCardStyled>\n\t);\n}\n\nexport default ForecastCard;\n","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { WeatherContext } from '../context/WeatherContext';\nimport ForecastCard from './ForecastCard';\n\nconst ForecastStyled = styled.ul`\n\tlist-style: none;\n\tmargin: 5rem 0 0;\n\tpadding: 0 2rem;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(2, 1fr);\n\tgap: 3.2rem 2.6rem;\n\t@media (min-width: 75em) {\n\t\tpadding: 0;\n\t\tgrid-template-columns: repeat(5, 1fr);\n\t}\n`;\n\nfunction Forecast() {\n\tconst { weather } = useContext(WeatherContext);\n\n\tconst forecast = weather?.consolidated_weather.slice(1);\n\n\treturn (\n\t\t<ForecastStyled>\n\t\t\t{forecast?.map((weather, i) => (\n\t\t\t\t<ForecastCard key={weather.id} weather={weather} index={i} />\n\t\t\t))}\n\t\t</ForecastStyled>\n\t);\n}\n\nexport default Forecast;\n","import { keyframes } from 'styled-components';\n\nexport const slideUp = keyframes`\n  from {\n    transform: translate3d(0, 100%, 0);\n  }\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nexport const slideDown = keyframes`\n  from {\n    transform: translate3d(0, 0, 0);\n  }\n  to {\n    transform: translate3d(0, 100%, 0);\n  }\n`;\n\nexport const spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n","import styled from 'styled-components';\nimport { spin } from '../animations';\n\ninterface LoaderProps {\n\tsize?: number;\n}\n\nconst LoaderStyled = styled.div<{ size: number }>`\n\tborder-top: 0.2rem solid var(--color-text);\n\tborder-radius: 50%;\n\theight: ${({ size }) => size + 'rem'};\n\tmargin: auto;\n\twidth: ${({ size }) => size + 'rem'};\n\tanimation: ${spin} 0.6s linear infinite;\n`;\n\nfunction Loader({ size = 4 }: LoaderProps) {\n\treturn <LoaderStyled size={size} role=\"status\" aria-label=\"Loading...\" />;\n}\n\nexport default Loader;\n","export const cardinalDirections = new Map<string, number>([\n\t['N', 0],\n\t['NNE', 22.5],\n\t['NE', 45],\n\t['ENE', 67.5],\n\t['E', 90],\n\t['ESE', 112.5],\n\t['SE', 135],\n\t['SSE', 157.5],\n\t['S', 180],\n\t['SSW', 202.5],\n\t['SW', 225],\n\t['WSW', 247.5],\n\t['W', 270],\n\t['WNW', 292.5],\n\t['NW', 315],\n\t['NNW', 337.5],\n]);\n","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { cardinalDirections } from '../constants/cardinal-directions';\nimport { WeatherContext } from '../context/WeatherContext';\n\nconst TodayHightlightsStyled = styled.section`\n\tmargin-top: 5rem;\n\tmargin-bottom: 4rem;\n\tpadding: 0 2rem;\n\t@media (min-width: 75em) {\n\t\tpadding: 0;\n\t}\n\t.headline {\n\t\tfont-size: 3.2rem;\n\t\tmargin: 0 0 3.2rem;\n\t}\n\t.grid {\n\t\tdisplay: grid;\n\t\tgap: 3.2rem;\n\t\t@media (min-width: 37.5em) {\n\t\t\tgrid-template-columns: repeat(2, 1fr);\n\t\t}\n\t\t@media (min-width: 75em) {\n\t\t\tgap: 4.8rem;\n\t\t}\n\t}\n\t.hightlight {\n\t\tbackground-color: var(--bg-sidebar);\n\t\tpadding: 2.2rem;\n\t\ttext-align: center;\n\t}\n\t.hightlight-name {\n\t\tfont-size: 1.6rem;\n\t\tfont-weight: 500;\n\t\tmargin: 0;\n\t\ttext-transform: capitalize;\n\t}\n\t.hightlight-result {\n\t\tfont-size: 6.4rem;\n\t\tfont-weight: 700;\n\t\tmargin: 1rem 0;\n\t\tspan {\n\t\t\tfont-size: 3.6rem;\n\t\t\tfont-weight: 500;\n\t\t}\n\t}\n\t.progress-bar {\n\t\t.percentage {\n\t\t\tcolor: #a09fb1;\n\t\t\tfont-size: 1.2rem;\n\t\t\tfont-weight: 700;\n\t\t\tmargin-bottom: 0.5rem;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: space-between;\n\t\t}\n\t\t.percentage-sign {\n\t\t\tcolor: #a09fb1;\n\t\t\tfont-size: 1.2rem;\n\t\t\tfont-weight: 700;\n\t\t\tmargin-top: 0.5rem;\n\t\t\ttext-align: right;\n\t\t}\n\t}\n\t.bar {\n\t\tbackground-color: var(--color-text);\n\t\tborder-radius: 0.8rem;\n\t\theight: 0.8rem;\n\t\t.progress {\n\t\t\tbackground-color: var(--color-yellow);\n\t\t\tborder-radius: 0.8rem;\n\t\t\theight: 100%;\n\t\t\twidth: 0;\n\t\t\ttransition: width 0.3s linear;\n\t\t}\n\t}\n\t.hightlight-extra {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\t.circle {\n\t\tbackground-color: rgba(255, 255, 255, 0.3);\n\t\tborder-radius: 50%;\n\t\theight: 3rem;\n\t\tmargin-right: 0.6rem;\n\t\tuser-select: none;\n\t\twidth: 3rem;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\ttransition: transform 0.3s ease;\n\t\tspan.material-icons {\n\t\t\tfont-size: 2rem;\n\t\t}\n\t}\n`;\n\nfunction TodayHightlights() {\n\tconst { weather } = useContext(WeatherContext);\n\n\tif (!weather) return null;\n\n\tconst [weatherToday] = weather.consolidated_weather;\n\n\tconst deg = cardinalDirections.get(weatherToday.wind_direction_compass);\n\n\treturn (\n\t\t<TodayHightlightsStyled>\n\t\t\t<h2 className=\"headline\">Today's Hightlights</h2>\n\t\t\t<div className=\"grid\">\n\t\t\t\t<div className=\"hightlight\">\n\t\t\t\t\t<h3 className=\"hightlight-name\">Wind status</h3>\n\t\t\t\t\t<p className=\"hightlight-result\">\n\t\t\t\t\t\t{~~weatherToday.wind_speed} <span>mph</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"hightlight-extra\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"circle\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttransform: `rotate(${deg}deg)`,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className=\"material-icons\">navigation</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{weatherToday.wind_direction_compass}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"hightlight\">\n\t\t\t\t\t<h4 className=\"hightlight-name\">Humidity</h4>\n\t\t\t\t\t<p className=\"hightlight-result\">\n\t\t\t\t\t\t{~~weatherToday.humidity} <span>%</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"progress-bar\">\n\t\t\t\t\t\t<div className=\"percentage\">\n\t\t\t\t\t\t\t<span>0</span>\n\t\t\t\t\t\t\t<span>50</span>\n\t\t\t\t\t\t\t<span>100</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"bar\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"progress\"\n\t\t\t\t\t\t\t\tstyle={{ width: ~~weatherToday.humidity + '%' }}\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"percentage-sign\">%</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"hightlight\">\n\t\t\t\t\t<h4 className=\"hightlight-name\">Visibility</h4>\n\t\t\t\t\t<p className=\"hightlight-result\">\n\t\t\t\t\t\t{~~weatherToday.visibility} <span>miles</span>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"hightlight\">\n\t\t\t\t\t<h4 className=\"hightlight-name\">Air Pressure</h4>\n\t\t\t\t\t<p className=\"hightlight-result\">\n\t\t\t\t\t\t{~~weatherToday.air_pressure} <span>mb</span>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</TodayHightlightsStyled>\n\t);\n}\n\nexport default TodayHightlights;\n","import styled from 'styled-components';\n\ninterface ButtonCircleProps {\n\ttext?: string;\n\ttitle?: string;\n\ticon?: string;\n\tvariant?: string;\n\tsize?: string;\n\tonClick?(): void;\n}\n\nconst ButtonCircleStyled = styled.button.attrs<{ title: string }>((props) => ({\n\ttitle: props.title,\n}))<{ variant: string; size: string }>`\n\tbackground-color: ${({ variant }) =>\n\t\tvariant === 'gray'\n\t\t\t? 'rgba(110, 112, 122, 0.3)'\n\t\t\t: variant === 'light'\n\t\t\t? 'var(--color-text)'\n\t\t\t: 'var(--color-blue)'};\n\tborder-radius: 50%;\n\tborder: none;\n\tcolor: ${({ variant }) => (variant === 'light' ? '#110E3C' : '#E7E7EB')};\n\tcursor: pointer;\n\tfont-family: inherit;\n\tfont-size: ${({ size }) => (size === 'lg' ? '1.8rem' : '1.6rem')};\n\tfont-weight: ${({ size }) => (size === 'lg' ? '700' : '500')};\n\theight: 4rem;\n\twidth: 4rem;\n\tdisplay: inline-flex;\n\talign-items: center;\n\tjustify-content: center;\n\ttransition: background 0.3s ease, color 0.3s ease;\n\t&:focus {\n\t\toutline: none;\n\t}\n`;\n\nfunction ButtonCircle({\n\ttext,\n\ttitle,\n\ticon,\n\tvariant = 'blue',\n\tsize = 'normal',\n\tonClick,\n}: ButtonCircleProps) {\n\treturn (\n\t\t<ButtonCircleStyled\n\t\t\tonClick={onClick}\n\t\t\tsize={size}\n\t\t\tvariant={variant}\n\t\t\ttitle={title}\n\t\t>\n\t\t\t{text}\n\t\t\t{icon && <span className=\"material-icons\">{icon}</span>}\n\t\t</ButtonCircleStyled>\n\t);\n}\n\nexport default ButtonCircle;\n","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { TempUnits } from '../constants/temp-units';\nimport { WeatherContext } from '../context/WeatherContext';\nimport ButtonCircle from './ButtonCircle';\n\nconst UnitSwitchStyled = styled.header`\n\tmargin-top: 4.2rem;\n\tpadding: 0 2rem;\n\tdisplay: none;\n\talign-items: center;\n\tjustify-content: flex-end;\n\t@media (min-width: 56.25em) {\n\t\tdisplay: flex;\n\t}\n\t@media (min-width: 75em) {\n\t\tpadding: 0;\n\t}\n\tbutton:first-child {\n\t\tmargin-right: 2.2rem;\n\t}\n`;\n\nfunction UnitSwitch() {\n\tconst { tempUnit, changeToCelsius, changeToFahrenheit } = useContext(\n\t\tWeatherContext\n\t);\n\n\treturn (\n\t\t<UnitSwitchStyled>\n\t\t\t<ButtonCircle\n\t\t\t\tsize=\"lg\"\n\t\t\t\ttext=\"°C\"\n\t\t\t\tvariant={tempUnit === TempUnits.C ? 'light' : 'gray'}\n\t\t\t\ttitle=\"Switch to Celsius\"\n\t\t\t\tonClick={changeToCelsius}\n\t\t\t/>\n\t\t\t<ButtonCircle\n\t\t\t\tsize=\"lg\"\n\t\t\t\ttext=\"°F\"\n\t\t\t\tvariant={tempUnit === TempUnits.F ? 'light' : 'gray'}\n\t\t\t\ttitle=\"Switch to Fahrenheit\"\n\t\t\t\tonClick={changeToFahrenheit}\n\t\t\t/>\n\t\t</UnitSwitchStyled>\n\t);\n}\n\nexport default UnitSwitch;\n","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { WeatherContext } from '../context/WeatherContext';\nimport Forecast from './Forecast';\nimport Loader from './Loader';\nimport TodayHightlights from './TodayHightlights';\nimport UnitSwitch from './UnitSwitch';\n\nconst MainWeatherStyled = styled.main`\n\twidth: 100%;\n\toverflow-y: auto;\n\t.wrapper {\n\t\tmargin: 0 auto;\n\t\tmax-width: 80rem;\n\t\twidth: 100%;\n\t\t@media (min-width: 75em) {\n\t\t\tpadding: 0 2rem;\n\t\t}\n\t\t@media (min-width: 85em) {\n\t\t\tpadding: 0;\n\t\t}\n\t}\n\t.center {\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n`;\n\nfunction MainWeather() {\n\tconst { isLoading } = useContext(WeatherContext);\n\n\treturn (\n\t\t<MainWeatherStyled>\n\t\t\t{isLoading ? (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<Loader />\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t<UnitSwitch />\n\t\t\t\t\t<Forecast />\n\t\t\t\t\t<TodayHightlights />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</MainWeatherStyled>\n\t);\n}\n\nexport default MainWeather;\n","import styled from 'styled-components';\nimport Loader from './Loader';\n\ninterface ButtonProps {\n\ttext: string;\n\tvariant?: string;\n\tshadow?: boolean;\n\tdisabled?: boolean;\n\tloading?: boolean;\n\tonClick?(): void;\n}\n\nconst ButtonStyled = styled.button<{\n\tvariant: string;\n\tshadow: boolean;\n}>`\n\tbackground-color: ${({ variant }) =>\n\t\tvariant === 'blue' ? 'var(--color-blue)' : 'var(--color-gray)'};\n\tborder: none;\n\tbox-shadow: ${({ shadow }) => shadow && '0px 4px 4px rgba(0, 0, 0, 0.25);'};\n\tcolor: inherit;\n\tcursor: pointer;\n\tfont-family: inherit;\n\tfont-size: 1.6rem;\n\tfont-weight: 500;\n\tmargin: 0;\n\tpadding: 1rem 1.8rem;\n\ttransition: opacity 0.3s ease;\n\t&:focus {\n\t\toutline: none;\n\t}\n\t&:disabled {\n\t\tcursor: not-allowed;\n\t\topacity: 0.5;\n\t}\n`;\n\nfunction Button({\n\tonClick,\n\ttext,\n\tvariant = 'blue',\n\tshadow = false,\n\tdisabled = false,\n\tloading = false,\n}: ButtonProps) {\n\treturn (\n\t\t<ButtonStyled\n\t\t\tonClick={onClick}\n\t\t\tvariant={variant}\n\t\t\tshadow={shadow}\n\t\t\tdisabled={disabled || loading}\n\t\t>\n\t\t\t{loading ? <Loader size={1.5} /> : text}\n\t\t</ButtonStyled>\n\t);\n}\n\nexport default Button;\n","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { WeatherContext } from '../context/WeatherContext';\nimport { getCurrentPosition } from '../helpers/geolocation';\nimport Button from './Button';\nimport ButtonCircle from './ButtonCircle';\n\nconst SidebarTopStyled = styled.nav`\n\tpadding: 1.8rem 1.2rem;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n`;\n\nfunction SidebarTop() {\n\tconst { showSearchWeather, searchLocationByCoords } = useContext(\n\t\tWeatherContext\n\t);\n\n\tconst handleClick = () => {\n\t\tgetCurrentPosition().then(({ lat, lng }) => {\n\t\t\tsearchLocationByCoords(lat, lng);\n\t\t});\n\t};\n\n\treturn (\n\t\t<SidebarTopStyled>\n\t\t\t<Button\n\t\t\t\tonClick={showSearchWeather}\n\t\t\t\tvariant=\"gray\"\n\t\t\t\tshadow={true}\n\t\t\t\ttext=\"Search for places\"\n\t\t\t/>\n\t\t\t{window.navigator.geolocation && (\n\t\t\t\t<ButtonCircle\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\tvariant=\"gray\"\n\t\t\t\t\ttitle=\"Get weather of my current location\"\n\t\t\t\t\ticon=\"gps_fixed\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</SidebarTopStyled>\n\t);\n}\n\nexport default SidebarTop;\n","export default __webpack_public_path__ + \"static/media/clouds-bg.f88244c2.png\";","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { TempUnits } from '../constants/temp-units';\nimport { WeatherContext } from '../context/WeatherContext';\nimport { formatDate } from '../helpers/date';\nimport { celsiusToFahrehheit } from '../helpers/temp-units';\nimport cloudsBg from '../assets/img/clouds-bg.png';\n\nconst SidebarWeatherResultStyled = styled.div`\n\tposition: relative;\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\t.bg {\n\t\tbackground-image: url(${cloudsBg});\n\t\tbackground-repeat: no-repeat;\n\t\tbackground-size: 120%;\n\t\tbackground-position: -30px 0;\n\t\topacity: 0.05;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tz-index: 0;\n\t}\n\t> *:not(:first-child) {\n\t\tposition: relative;\n\t}\n\t.img {\n\t\theight: 17.4rem;\n\t\twidth: 15rem;\n\t\tmargin: 0 auto;\n\t}\n\t.temperature {\n\t\tfont-size: 14.4rem;\n\t\tfont-weight: 500;\n\t\tmargin: 0;\n\t\t@media (min-width: 75em) {\n\t\t\tmargin: 4rem 0;\n\t\t}\n\t}\n\t.temperature-unit {\n\t\tcolor: #a09fb1;\n\t\tfont-size: 4.8rem;\n\t\tmargin-left: 0.5rem;\n\t}\n\t.weather-description {\n\t\tcolor: #a09fb1;\n\t\tfont-size: 3.6rem;\n\t\tfont-weight: 600;\n\t\tmargin: 1.5rem 0;\n\t\t@media (min-width: 75em) {\n\t\t\tmargin-bottom: 5rem;\n\t\t}\n\t}\n\t.weather-meta {\n\t\tcolor: #88869d;\n\t\tfont-size: 1.8rem;\n\t\tfont-weight: 500;\n\t\tmargin: 0;\n\t\t&:last-child {\n\t\t\tmargin-top: 1.5rem;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\t@media (min-width: 75em) {\n\t\t\t\tmargin-top: 3rem;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction SidebarWeatherResult() {\n\tconst { weather, tempUnit } = useContext(WeatherContext);\n\n\tif (!weather) return null;\n\tconst [weatherToday] = weather.consolidated_weather;\n\n\treturn (\n\t\t<SidebarWeatherResultStyled>\n\t\t\t<div className=\"bg\" />\n\t\t\t<img\n\t\t\t\tsrc={`https://www.metaweather.com/static/img/weather/${weatherToday.weather_state_abbr}.svg`}\n\t\t\t\talt={weatherToday.weather_state_name}\n\t\t\t\tclassName=\"img\"\n\t\t\t/>\n\t\t\t<h1 className=\"temperature\">\n\t\t\t\t{tempUnit === TempUnits.F\n\t\t\t\t\t? ~~celsiusToFahrehheit(~~weatherToday.the_temp)\n\t\t\t\t\t: ~~weatherToday.the_temp}\n\t\t\t\t<span className=\"temperature-unit\">\n\t\t\t\t\t{tempUnit === TempUnits.F ? '°F' : '°C'}\n\t\t\t\t</span>\n\t\t\t</h1>\n\t\t\t<h2 className=\"weather-description\">\n\t\t\t\t{weatherToday.weather_state_name}\n\t\t\t</h2>\n\t\t\t<p className=\"weather-meta\">Today - {formatDate(weather.time)}</p>\n\t\t\t<p className=\"weather-meta\">\n\t\t\t\t<span className=\"material-icons\">location_on</span>\n\t\t\t\t{weather.title}\n\t\t\t</p>\n\t\t</SidebarWeatherResultStyled>\n\t);\n}\n\nexport default SidebarWeatherResult;\n","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { WeatherContext } from '../context/WeatherContext';\n\nconst LocationListStyled = styled.ul`\n\tlist-style: none;\n\tmargin: 3.5rem 0 0;\n\tpadding: 0;\n\t.location-item {\n\t\tborder: 1px solid transparent;\n\t\tcursor: pointer;\n\t\tmargin-bottom: 3.5rem;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\tpadding: 2rem 1.2rem;\n\t\tspan {\n\t\t\topacity: 0;\n\t\t}\n\t\t&:hover {\n\t\t\tborder-color: #616475;\n\t\t\tspan {\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction LocationList() {\n\tconst { locationResult } = useContext(WeatherContext);\n\n\tconst { getWeather } = useContext(WeatherContext);\n\n\treturn (\n\t\t<LocationListStyled className=\"location-list\">\n\t\t\t{locationResult.map((item) => (\n\t\t\t\t<li\n\t\t\t\t\tonClick={() => getWeather(item.woeid)}\n\t\t\t\t\tkey={item.woeid}\n\t\t\t\t\tclassName=\"location-item\"\n\t\t\t\t>\n\t\t\t\t\t{item.title}\n\t\t\t\t\t<span className=\"material-icons\">chevron_right</span>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</LocationListStyled>\n\t);\n}\n\nexport default LocationList;\n","import { FormEvent, useContext, useState } from 'react';\nimport styled from 'styled-components';\nimport { WeatherContext } from '../context/WeatherContext';\nimport Button from './Button';\n\nconst WeatherFormStyled = styled.form`\n\theight: 4.8rem;\n\tmargin-top: 3rem;\n\tdisplay: grid;\n\tgrid-template-columns: 1fr 8.6rem;\n\tgap: 1.2rem;\n\t.input-wrapper {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1.5rem 1.8rem 1fr;\n\t\talign-items: center;\n\t\tspan {\n\t\t\tcolor: #616475;\n\t\t\tgrid-row: 1;\n\t\t\tgrid-column: 2;\n\t\t}\n\t}\n\t.input {\n\t\tbackground: none;\n\t\tborder: 1px solid var(--color-text);\n\t\tcolor: inherit;\n\t\tfont: inherit;\n\t\theight: 100%;\n\t\tpadding-left: 4.5rem;\n\t\tpadding-right: 1rem;\n\t\twidth: 100%;\n\t\tgrid-row: 1;\n\t\tgrid-column: 1 / -1;\n\t\t&:focus {\n\t\t\toutline: none;\n\t\t}\n\t}\n`;\n\nfunction WeatherForm({ setSearchError }: { setSearchError(v: boolean): void }) {\n\tconst [location, setLocation] = useState('');\n\tconst [prevLocation, setPrevLocation] = useState(location);\n\n\tconst disableButton = () => location.length < 3;\n\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst { searchLocation } = useContext(WeatherContext);\n\n\tconst handleSearch = (e: FormEvent) => {\n\t\te.preventDefault();\n\t\tif (location.length < 3 || location === prevLocation) return;\n\t\tsetLoading(true);\n\t\tsearchLocation(location)\n\t\t\t.then(() => {\n\t\t\t\tsetPrevLocation(location);\n\t\t\t\tsetLocation('');\n\t\t\t\tsetSearchError(false);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetSearchError(true);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<WeatherFormStyled onSubmit={handleSearch}>\n\t\t\t<div className=\"input-wrapper\">\n\t\t\t\t<span className=\"material-icons\">search</span>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"search location\"\n\t\t\t\t\tautoFocus={true}\n\t\t\t\t\taria-label=\"Search location\"\n\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\tvalue={location}\n\t\t\t\t\tonChange={({ target }) => setLocation(target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Button\n\t\t\t\tloading={isLoading}\n\t\t\t\ttext=\"Search\"\n\t\t\t\tdisabled={disableButton()}\n\t\t\t/>\n\t\t</WeatherFormStyled>\n\t);\n}\n\nexport default WeatherForm;\n","import { useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { slideDown, slideUp } from '../animations';\nimport { WeatherContext } from '../context/WeatherContext';\nimport LocationList from './LocationList';\nimport WeatherForm from './WeatherForm';\n\nconst SearchWeatherStyled = styled.div<{ show: boolean }>`\n\tbackground-color: var(--bg-sidebar);\n\theight: 100vh;\n\tpadding: 1.8rem 1.2rem;\n\toverflow-y: auto;\n\twidth: 100%;\n\tposition: fixed;\n\tbottom: 0;\n\tleft: 0;\n\tanimation: ${({ show }) => (show ? slideUp : slideDown)} 0.4s ease-out;\n\t@media (min-width: 56.25em) {\n\t\twidth: 32rem;\n\t}\n\t@media (min-width: 75em) {\n\t\twidth: 46rem;\n\t}\n\t.btn-close {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tcolor: inherit;\n\t\tcursor: pointer;\n\t\tdisplay: block;\n\t\tmargin: 0;\n\t\tmargin-left: auto;\n\t\tmargin-right: 0.6rem;\n\t\tpadding: 0;\n\t\ttransition: transform 0.3s ease;\n\t\t&:focus {\n\t\t\toutline: none;\n\t\t}\n\t\t&:focus,\n\t\t&:hover {\n\t\t\ttransform: scale(1.15);\n\t\t}\n\t}\n\t.error {\n\t\tmargin-top: 4rem;\n\t\tfont-size: 1.8rem;\n\t}\n`;\n\nfunction SearchWeather({ show }: { show: boolean }) {\n\tconst { hideSearchWeather } = useContext(WeatherContext);\n\n\tconst [shouldRender, setRender] = useState(show);\n\n\tuseEffect(() => {\n\t\tif (show) setRender(true);\n\t}, [show]);\n\n\tconst handleAnimationEnd = () => {\n\t\tif (!show) setRender(false);\n\t};\n\n\tconst [isSearchError, setSearchError] = useState(false);\n\n\tif (!shouldRender) return null;\n\n\treturn (\n\t\t<SearchWeatherStyled onAnimationEnd={handleAnimationEnd} show={show}>\n\t\t\t<button className=\"btn-close\" onClick={hideSearchWeather}>\n\t\t\t\t<span className=\"material-icons\">close</span>\n\t\t\t</button>\n\t\t\t<WeatherForm setSearchError={setSearchError} />\n\n\t\t\t{isSearchError ? (\n\t\t\t\t<div className=\"error\">\n\t\t\t\t\t<p>No results found</p>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<LocationList />\n\t\t\t)}\n\t\t</SearchWeatherStyled>\n\t);\n}\n\nexport default SearchWeather;\n","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { WeatherContext } from '../context/WeatherContext';\nimport SidebarTop from './SidebarTop';\nimport SidebarWeatherResult from './SidebarWeatherResult';\nimport SearchWeather from './SearchWeather';\nimport Loader from './Loader';\n\nconst SidebarStyled = styled.aside`\n\tbackground-color: var(--bg-sidebar);\n\tmin-height: 100vh;\n\tgrid-row: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\t@media (min-width: 56.25em) {\n\t\theight: 100vh;\n\t}\n`;\n\nfunction Sidebar() {\n\tconst { isSearching, isLoading } = useContext(WeatherContext);\n\n\treturn (\n\t\t<SidebarStyled>\n\t\t\t<SidebarTop />\n\t\t\t{isLoading ? <Loader /> : <SidebarWeatherResult />}\n\t\t\t<SearchWeather show={isSearching} />\n\t\t</SidebarStyled>\n\t);\n}\n\nexport default Sidebar;\n","import styled from 'styled-components';\nimport MainWeather from './MainWeather';\nimport Sidebar from './Sidebar';\n\nconst LayoutStyled = styled.div`\n\tcolor: inherit;\n\tdisplay: grid;\n\t@media (min-width: 56.25em) {\n\t\tgrid-template-columns: 32rem 1fr;\n\t\theight: 100vh;\n\t\toverflow: hidden;\n\t}\n\t@media (min-width: 75em) {\n\t\tgrid-template-columns: 46rem 1fr;\n\t}\n`;\n\nfunction Layout() {\n\treturn (\n\t\t<LayoutStyled>\n\t\t\t<Sidebar />\n\t\t\t<MainWeather />\n\t\t</LayoutStyled>\n\t);\n}\n\nexport default Layout;\n","import { WeatherProvider } from './context/WeatherContext';\nimport GlobalStyle from './styles/GlobalStyle';\nimport Layout from './components/Layout';\n\nfunction App() {\n\treturn (\n\t\t<WeatherProvider>\n\t\t\t<GlobalStyle />\n\t\t\t<Layout />\n\t\t</WeatherProvider>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}